[{"C:\\Users\\pc\\licenta\\src\\index.js":"1","C:\\Users\\pc\\licenta\\src\\App.js":"2","C:\\Users\\pc\\licenta\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\licenta\\src\\MiniApp.js":"4","C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js":"5","C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js":"6","C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js":"7","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js":"8","C:\\Users\\pc\\licenta\\src\\components\\Header.js":"9","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js":"10","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js":"11","C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectForm.js":"12","C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectsPage.js":"13","C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js":"14","C:\\Users\\pc\\licenta\\src\\components\\pages\\AvailableProjects.js":"15","C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectForStudent.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":152,"mtime":1609088113485,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2770,"mtime":1609952757692,"results":"21","hashOfConfig":"18"},{"size":2425,"mtime":1609839041383,"results":"22","hashOfConfig":"18"},{"size":1085,"mtime":1609840288680,"results":"23","hashOfConfig":"18"},{"size":574,"mtime":1609411300710,"results":"24","hashOfConfig":"18"},{"size":376,"mtime":1609087880641,"results":"25","hashOfConfig":"18"},{"size":1757,"mtime":1609925699402,"results":"26","hashOfConfig":"18"},{"size":4851,"mtime":1609604000478,"results":"27","hashOfConfig":"18"},{"size":307,"mtime":1609423931339,"results":"28","hashOfConfig":"18"},{"size":9350,"mtime":1609952760431,"results":"29","hashOfConfig":"18"},{"size":1987,"mtime":1609949069154,"results":"30","hashOfConfig":"18"},{"size":873,"mtime":1609951414378,"results":"31","hashOfConfig":"18"},{"size":2052,"mtime":1609950539483,"results":"32","hashOfConfig":"18"},{"size":1014,"mtime":1609952994902,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"60z965",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\licenta\\src\\index.js",[],["71","72"],"C:\\Users\\pc\\licenta\\src\\App.js",[],"C:\\Users\\pc\\licenta\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\licenta\\src\\MiniApp.js",[],"C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js",[],"C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js",["73"],"\r\nimport React from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const executeJwtAuthService = (username, password) => {\r\n      return axios.post('http://localhost:8081/authenticate', {\r\n        username,\r\n        password\r\n\r\n      })\r\n    }\r\n\r\n\r\nexport const registerSuccessful = (username, token) => {\r\n  sessionStorage.setItem('authenticatedUser', username)\r\n  localStorage.setItem(\"token\", createJwtToken(token))\r\n  setupAxiosInterceptors(createJwtToken(token))\r\n\r\n}    \r\n\r\nexport const isUserLoggedIn = () => {\r\n  let user = sessionStorage.getItem('authenticatedUser');\r\n if(user===null) return false;\r\n return true;\r\n}\r\n\r\n\r\nexport const createJwtToken = (token) =>{\r\n  return 'Bearer ' + token\r\n\r\n}\r\n\r\nexport const setupAxiosInterceptors = (token) => {\r\n\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      if(isUserLoggedIn()){\r\n        config.headers.authorization = token;\r\n      }\r\n      return config;\r\n    }\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport const existingUser = (username) => {\r\n  return axios.post('http://localhost:8081/existingUser',  \r\n  {username} )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js",["74","75"],"import Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport {logout} from './services/LoginService'\r\nimport axios from 'axios'\r\n\r\nconst WelcomePage = () => {\r\n\r\n    const [message, setMessage] = useState('nu merge');\r\n    function check(){\r\n        Axios.get('http://localhost:8081/test').then(res => setMessage(res.data))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>Salut, te ai autentificat cu succes </div>\r\n       \r\n       <button onClick={check}>Check Cors</button>\r\n       <div>{message}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js",[],"C:\\Users\\pc\\licenta\\src\\components\\Header.js",["76","77","78","79"],"import React from 'react'\r\nimport {  Link } from 'react-router-dom';\r\nimport {withRouter} from 'react-router'\r\nimport {isUserLoggedIn, logout} from './services/LoginService'\r\nimport userEvent from '@testing-library/user-event';\r\nimport isProfessor from './pages/AccountInfo'\r\n\r\n\r\n        const Header = ({activeUser, setActiveUser}) => {\r\n\r\n            function logout() {\r\n                sessionStorage.removeItem('authenticatedUser');\r\n                setActiveUser({id: ''});\r\n              }\r\n   \r\n  \r\n    return(\r\n      \r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n              {isUserLoggedIn() && <div><a className=\"navbar-brand\">{activeUser.username}</a></div>}\r\n            <ul className=\"navbar-nav\">\r\n               {isUserLoggedIn() && <li><Link className=\"nav-link\" to=\"/welcome\">Homepage</Link></li>}\r\n                {isUserLoggedIn() && activeUser.typeOfUser==='professor' && <li><Link className=\"nav-link\" to=\"/projects\">Projects</Link></li>}\r\n                {isUserLoggedIn() && activeUser.typeOfUser===\"student\"&& <li><Link className=\"nav-link\" to=\"/availableProjects\">Available Projects</Link></li>}\r\n                {isUserLoggedIn() && <li><Link className=\"nav-link\" to=\"/accountInfo\">Account Information</Link></li>}\r\n            </ul>\r\n            <ul className=\"navbar nav navbar-collapse justify-content-end\">\r\n               {!isUserLoggedIn() && <li><Link  className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n                {isUserLoggedIn() && <li><Link className=\"nav-link\" to=\"/logout\" onClick={logout}>Logout</Link></li>}\r\n            </ul>\r\n                </nav>\r\n            </header>\r\n            \r\n       \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js",["80","81"],"import React, {useState} from 'react'\r\nimport {  useHistory } from 'react-router';\r\nimport {Formik, Form, Field, ErrorMessage}  from 'formik'\r\nimport { updateUser } from '../services/ProfileUpdateService'\r\n\r\n\r\n\r\n\r\n\r\nconst AccountInfo = ({activeUser, setActiveUser}) => {\r\n    \r\n    const [editMode, setEditMode] = useState(false)\r\n    const {username, firstName, lastName, department, email, password, typeOfUser} = activeUser\r\n    const history = useHistory();\r\n    \r\n\r\n    const isProfessor = () =>{\r\n        return typeOfUser==='professor'\r\n        }\r\n\r\n    \r\n\r\n    function validate(values){\r\n        let errors = {}\r\n        if(!values.firstName){\r\n            errors.firstName = 'Enter your first name'\r\n        }\r\n        if(!values.lastName){\r\n            errors.lastName = 'Enter your last name '\r\n        }\r\n        if(!values.email){\r\n            errors.email = 'Enter a valid email adress'\r\n            }\r\n        if(!values.department){\r\n            errors.department= 'Enter a department'\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    function onSubmit(values){\r\n        console.log(values)\r\n        setActiveUser({\r\n            ...activeUser,\r\n           ...values\r\n        })\r\n\r\n        updateUser(activeUser).then(()=>{\r\n            setEditMode(false)\r\n        })\r\n        \r\n\r\n    }\r\n\r\n\r\n    return(\r\n    \r\n    <div>\r\n        {!editMode ? <div>\r\n        <h1>Complete your personal information</h1>\r\n        <div>Username: <span>{username}</span></div>\r\n        <div>FirstName: <span>{firstName}</span></div>\r\n        <div>LastName: <span>{lastName}</span></div>\r\n      {isProfessor() &&  <div>Department: <span>{department}</span></div> }\r\n        <div>Email:<span>{email}</span></div>\r\n        <div>Password:<span>{password}</span></div>\r\n        <div onClick={() => setEditMode(true)}>Edit</div>\r\n        </div>   :  \r\n    \r\n        <Formik initialValues={\r\n            activeUser\r\n            }\r\n            onSubmit={(values) => onSubmit(values)}\r\n            validate={validate}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            >\r\n                {\r\n                    (props) => (\r\n                        <Form>\r\n                            <fieldset className=\"form-group\">\r\n                                <label>FirstName: </label>\r\n                                <Field type=\"text\" name=\"firstName\" className=\"form-control\" />\r\n                            </fieldset>\r\n\r\n                            <fieldset className=\"form-group\">\r\n                                <label>LastName: </label>\r\n                                <Field type=\"text\" name=\"lastName\" className=\"form-control\" />\r\n                            </fieldset>\r\n\r\n                            <fieldset className=\"form-group\">\r\n                                <label>Email: </label>\r\n                                <Field type=\"email\" name=\"email\" className=\"form-control\" />\r\n                            </fieldset>\r\n\r\n\r\n                          {isProfessor() &&  <fieldset className=\"form-group\">\r\n                                <label>Department: </label>\r\n                                <Field type=\"text\" name=\"department\" className=\"form-control\" />\r\n                            </fieldset> }\r\n\r\n                            {!isProfessor && <fieldset className=\"form-group\">\r\n                                <label>Series: </label>\r\n                                <Field type=\"text\" name=\"series\" className=\"form-control\" />\r\n                            </fieldset>}\r\n\r\n                            { !isProfessor && <fieldset className=\"form-group\">\r\n                                <label>Average Grade: </label>\r\n                                <Field type=\"text\" name=\"avgGrade\" className=\"form-control\" />\r\n                            </fieldset>}\r\n\r\n                           {!isProfessor && <div>\r\n                            <div id=\"my-radio-group\">Type of Degree</div>\r\n                        <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n                            <label>\r\n                            <Field type=\"radio\" name=\"degreeType\" value=\"Bachelor\" />\r\n                            Bachelor\r\n                            </label>\r\n                            <label>\r\n                            <Field type=\"radio\" name=\"degreeType\" value=\"Master\" />\r\n                            Master\r\n                            </label>\r\n                            \r\n                        </div>\r\n                            </div>}\r\n                        \r\n\r\n                            \r\n\r\n                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n\r\n\r\n                            </Form>\r\n                    )\r\n                }\r\n\r\n        </Formik> }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AccountInfo","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectForm.js",["82","83","84","85"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectsPage.js",["86","87","88"],"C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\AvailableProjects.js",["89"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\ProjectForStudent.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"99","line":3,"column":9,"nodeType":"97","messageId":"98","endLine":3,"endColumn":15},{"ruleId":"95","severity":1,"message":"100","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"95","severity":1,"message":"99","line":4,"column":25,"nodeType":"97","messageId":"98","endLine":4,"endColumn":31},{"ruleId":"95","severity":1,"message":"101","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":21,"column":41,"nodeType":"105","endLine":21,"endColumn":69},{"ruleId":"95","severity":1,"message":"106","line":3,"column":30,"nodeType":"97","messageId":"98","endLine":3,"endColumn":42},{"ruleId":"95","severity":1,"message":"107","line":14,"column":11,"nodeType":"97","messageId":"98","endLine":14,"endColumn":18},{"ruleId":"95","severity":1,"message":"106","line":1,"column":30,"nodeType":"97","messageId":"98","endLine":1,"endColumn":42},{"ruleId":"108","severity":1,"message":"109","line":26,"column":3,"nodeType":"110","endLine":26,"endColumn":5,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":70,"column":31,"nodeType":"114","endLine":70,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":86,"column":30,"nodeType":"114","endLine":86,"endColumn":43},{"ruleId":"95","severity":1,"message":"115","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":31},{"ruleId":"95","severity":1,"message":"116","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"117","line":22,"column":4,"nodeType":"110","endLine":22,"endColumn":6,"suggestions":"118"},{"ruleId":"95","severity":1,"message":"119","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"120","line":20,"column":4,"nodeType":"110","endLine":20,"endColumn":6,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'logout' is defined but never used.","'axios' is defined but never used.","'userEvent' is defined but never used.","'isProfessor' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ErrorMessage' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["124"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'setNestedObjectValues' is defined but never used.","'addProject' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveProjects'. Either include it or remove the dependency array.",["125"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'project'. Either include them or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [id]",{"range":"133","text":"134"},"Update the dependencies array to be: [retrieveProjects]",{"range":"135","text":"136"},"Update the dependencies array to be: [id, project]",{"range":"137","text":"138"},[820,822],"[id]",[571,573],"[retrieveProjects]",[614,616],"[id, project]"]