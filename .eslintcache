[{"C:\\Users\\pc\\licenta\\src\\index.js":"1","C:\\Users\\pc\\licenta\\src\\App.js":"2","C:\\Users\\pc\\licenta\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\licenta\\src\\MiniApp.js":"4","C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js":"5","C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js":"6","C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js":"7","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js":"8","C:\\Users\\pc\\licenta\\src\\components\\Header.js":"9","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js":"10","C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js":"11","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\ProjectForStudent.js":"12","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AvailableProjects.js":"13","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js":"14","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectsPage.js":"15","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectForm.js":"16","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\StudentRequests.js":"17","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\RequestDetails.js":"18","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectDetails.js":"19","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectRequests.js":"20","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\RequestDetailsStud.js":"21","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AssignedProject.js":"22","C:\\Users\\pc\\licenta\\src\\components\\shared\\DatePicker.js":"23","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\Assesment.js":"24","C:\\Users\\pc\\licenta\\src\\components\\services\\AssesmentService.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":209,"mtime":1612272407465,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":3832,"mtime":1624286880554,"results":"30","hashOfConfig":"27"},{"size":3820,"mtime":1617378241459,"results":"31","hashOfConfig":"27"},{"size":1027,"mtime":1623844053236,"results":"32","hashOfConfig":"27"},{"size":578,"mtime":1615210444516,"results":"33","hashOfConfig":"27"},{"size":376,"mtime":1609087880641,"results":"34","hashOfConfig":"27"},{"size":3099,"mtime":1621417344793,"results":"35","hashOfConfig":"27"},{"size":307,"mtime":1609423931339,"results":"36","hashOfConfig":"27"},{"size":3159,"mtime":1624631850039,"results":"37","hashOfConfig":"27"},{"size":3283,"mtime":1624560868353,"results":"38","hashOfConfig":"27"},{"size":2454,"mtime":1617376219983,"results":"39","hashOfConfig":"27"},{"size":7399,"mtime":1615201376497,"results":"40","hashOfConfig":"27"},{"size":3895,"mtime":1624567873973,"results":"41","hashOfConfig":"27"},{"size":8844,"mtime":1621425236489,"results":"42","hashOfConfig":"27"},{"size":1724,"mtime":1612709159140,"results":"43","hashOfConfig":"27"},{"size":1255,"mtime":1612263032757,"results":"44","hashOfConfig":"27"},{"size":8942,"mtime":1624632776472,"results":"45","hashOfConfig":"27"},{"size":3414,"mtime":1623507294882,"results":"46","hashOfConfig":"27"},{"size":4198,"mtime":1624562688171,"results":"47","hashOfConfig":"27"},{"size":1840,"mtime":1617377337314,"results":"48","hashOfConfig":"27"},{"size":580,"mtime":1624559255890,"results":"49","hashOfConfig":"27"},{"size":3685,"mtime":1623498393032,"results":"50","hashOfConfig":"27"},{"size":549,"mtime":1623499890156,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"60z965",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\pc\\licenta\\src\\index.js",[],["119","120"],"C:\\Users\\pc\\licenta\\src\\App.js",[],"C:\\Users\\pc\\licenta\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\licenta\\src\\MiniApp.js",["121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport WelcomePage from \"./components/WelcomePage\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport Header from \"./components/Header\";\r\nimport AccountInfo from \"./components/pages/AccountInfo\";\r\nimport ProjectForm from \"./components/pages/professor/ProjectForm\";\r\nimport ProjectsPage from \"./components/pages/professor/ProjectsPage\";\r\nimport {\r\n  isUserLoggedIn,\r\n  setupAxiosInterceptors,\r\n} from \"./components/services/LoginService\";\r\nimport AvailableProjects from \"./components/pages/student/AvailableProjects\";\r\nimport ProjectForStudent from \"./components/pages/student/ProjectForStudent\";\r\nimport StudentRequests from \"./components/pages/student/StudentRequests\";\r\nimport RequestDetails from \"./components/pages/professor/RequestDetails\";\r\nimport ProjectDetails from \"./components/pages/professor/ProjectDetails\";\r\nimport RequestDetailsStud from \"./components/pages/student/RequestDetailsStud\";\r\nimport AssignedProject from \"./components/pages/student/AssignedProject\";\r\nimport Assesment from \"./components/pages/student/Assesment\";\r\n\r\nconst MiniApp = () => {\r\n  const [activeUser, setActiveUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"user\")) || {\r\n      id: \"null\",\r\n      username: \"null\",\r\n      firstName: \"null\",\r\n      lastName: \"null\",\r\n      role: \"null\",\r\n      password: \"null\",\r\n      typeOfUser: \"null\",\r\n    }\r\n  );\r\n  console.log(activeUser);\r\n\r\n  useEffect(() => {\r\n    setupAxiosInterceptors(localStorage.getItem(\"token\"));\r\n    console.log(activeUser);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header activeUser={activeUser} setActiveUser={setActiveUser} />\r\n        <Switch>\r\n          <Route exact path=\"/login\">\r\n            <LoginPage setActiveUser={setActiveUser} />\r\n          </Route>\r\n\r\n          <AuthenticatedRoute path=\"/welcome\">\r\n            <WelcomePage />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/accountInfo\">\r\n            <AccountInfo\r\n              activeUser={activeUser}\r\n              setActiveUser={setActiveUser}\r\n            />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute exact path=\"/projects\">\r\n            <ProjectsPage activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/projects/:id\">\r\n            <ProjectForm professorId={activeUser.id} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/availableProjects\">\r\n            <AvailableProjects activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/project/:id\">\r\n            <ProjectForStudent activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/studentRequests\">\r\n            <StudentRequests activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/request/:id\">\r\n            <RequestDetails activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/projectDetails/:id\">\r\n            <ProjectDetails activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/requestDetailsStud/:id\">\r\n            <RequestDetailsStud activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/assignedProject\">\r\n            <AssignedProject activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n\r\n          <AuthenticatedRoute path=\"/skillAssesment\">\r\n            <Assesment activeUser={activeUser} />\r\n          </AuthenticatedRoute>\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default MiniApp;\r\n","C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js",["123"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  executeJwtAuthService,\r\n  existingUser,\r\n  registerSuccessful,\r\n} from \"./services/LoginService\";\r\nimport background from \"../img/grad.jpg\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst LoginPage = ({ setActiveUser }) => {\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    hasLoginFailed: false,\r\n    showSuccessMessage: false,\r\n  });\r\n\r\n  function handleChange(e) {\r\n    //console.log(state);\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function loginClicked() {\r\n    executeJwtAuthService(state.username, state.password)\r\n      .then((response) => {\r\n        registerSuccessful(state.username, response.data.token);\r\n        history.push(`/welcome`);\r\n      })\r\n      .catch(() => {\r\n        setState({\r\n          ...state,\r\n          hasLoginFailed: true,\r\n          showSuccessMessage: false,\r\n        });\r\n      });\r\n\r\n    existingUser(state.username)\r\n      .then((res) => {\r\n        setActiveUser(res.data);\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n        //    console.log(setActiveUser)\r\n        //   localStorage.setItem(\"user\", res.data.typeOfUser)\r\n      })\r\n      .catch(() => {\r\n        setState({\r\n          ...state,\r\n          hasLoginFailed: true,\r\n        });\r\n      });\r\n  }\r\n  console.log(state);\r\n\r\n  return (\r\n    <div\r\n      className=\"background p-5 text-center bg-image img-fluid\"\r\n      style={{\r\n        backgroundImage: `url(${background})`,\r\n        height: \"100vh\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n      }}\r\n    >\r\n      {/* <img src={background} className=\"img\"/> */}\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card-login card col-sm-8 col-md-4 col-lg-3 offset-md-4 offset-lg-4\">\r\n          <div className=\"card-header\">\r\n            <h3>Sign In</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"input-group form-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  placeholder=\"username\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"input-group form-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fas fa-key\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Login\"\r\n                  className=\"btn float-right btn-outline-warning\"\r\n                  onClick={loginClicked}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"d-flex justify-content-center \">\r\n              <a className=\"forgot\" href=\"#\">\r\n                Forgot your password?\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js",["124"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const executeJwtAuthService = (username, password) => {\r\n  return axios.post(\"http://localhost:8081/authenticate\", {\r\n    username,\r\n    password,\r\n  });\r\n};\r\n\r\nexport const registerSuccessful = (username, token) => {\r\n  sessionStorage.setItem(\"authenticatedUser\", username);\r\n  localStorage.setItem(\"token\", createJwtToken(token));\r\n  setupAxiosInterceptors(createJwtToken(token));\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  let user = sessionStorage.getItem(\"authenticatedUser\");\r\n  if (user === null) return false;\r\n  return true;\r\n};\r\n\r\nexport const createJwtToken = (token) => {\r\n  return \"Bearer \" + token;\r\n};\r\n\r\nexport const setupAxiosInterceptors = (token) => {\r\n  axios.interceptors.request.use((config) => {\r\n    if (isUserLoggedIn()) {\r\n      config.headers.authorization = token;\r\n    }\r\n    return config;\r\n  });\r\n};\r\n\r\nexport const existingUser = (username) => {\r\n  return axios.post(\"http://localhost:8081/existingUser\", { username });\r\n};\r\n","C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js",["125","126"],"import Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport {logout} from './services/LoginService'\r\nimport axios from 'axios'\r\n\r\nconst WelcomePage = () => {\r\n\r\n    const [message, setMessage] = useState('nu merge');\r\n    function check(){\r\n        Axios.get('http://localhost:8081/test').then(res => setMessage(res.data))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>Salut, te ai autentificat cu succes </div>\r\n       \r\n       <button onClick={check}>Check Cors</button>\r\n       <div>{message}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js",[],"C:\\Users\\pc\\licenta\\src\\components\\Header.js",["127","128","129","130"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isUserLoggedIn, logout } from \"./services/LoginService\";\r\nimport userEvent from \"@testing-library/user-event\";\r\nimport isProfessor from \"./pages/AccountInfo\";\r\n\r\nconst Header = ({ activeUser, setActiveUser }) => {\r\n  function logout() {\r\n    sessionStorage.removeItem(\"authenticatedUser\");\r\n    setActiveUser({ id: \"\" });\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n        {isUserLoggedIn() && (\r\n          <div>\r\n            <a className=\"navbar-brand\">{activeUser.username}</a>\r\n          </div>\r\n        )}\r\n        <ul className=\"navbar-nav\">\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/welcome\">\r\n                Homepage\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() && activeUser.typeOfUser === \"professor\" && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/projects\">\r\n                Projects\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            !activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/availableProjects\">\r\n                  Available Projects\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/accountInfo\">\r\n                Account Information\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            !activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/studentRequests\">\r\n                  Requests\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {isUserLoggedIn() && activeUser.typeOfUser === \"student\" && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/skillAssesment\">\r\n                Skills Assesment\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/assignedProject\">\r\n                  AssignedProject\r\n                </Link>\r\n              </li>\r\n            )}\r\n        </ul>\r\n        <ul className=\"navbar nav navbar-collapse justify-content-end\">\r\n          {!isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/logout\" onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\ProjectForStudent.js",["131","132"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  addRequest,\r\n  getProjectOwner,\r\n  retrieveProjectById,\r\n} from \"../../services/ProjectService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getAssesmentReview } from \"../../services/AssesmentService\";\r\n\r\nconst ProjectForStudent = ({ activeUser }) => {\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState(\"\");\r\n  const [projectOwner, setProjectOwner] = useState(\"\");\r\n  const [applied, setApplied] = useState(false);\r\n  const [review, setReview] = useState([]);\r\n  const [scoring, setScoring] = useState([]);\r\n\r\n  useEffect(() => {\r\n    retrieveProjectById(id).then((response) => {\r\n      setProject(response.data);\r\n\r\n      getProjectOwner(response.data.professorId).then((r) => {\r\n        setProjectOwner(r.data);\r\n        getAssesmentReview(activeUser.id).then((r) => {\r\n          setReview(r.data);\r\n          calculateScoring();\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function calculateScoring() {\r\n    console.log(review);\r\n    console.log(project);\r\n    let kScore;\r\n    let sScore;\r\n\r\n    if (\r\n      review.keywords &&\r\n      review.keywords.length > 0 &&\r\n      project.keywords.length > 0\r\n    ) {\r\n      console.log(\"a\");\r\n      let common = project.keywords.filter((value) =>\r\n        review.keywords.includes(value)\r\n      );\r\n      console.log(common);\r\n      kScore = common.length / project.keywords.length;\r\n      console.log(kScore);\r\n    }\r\n\r\n    if (review.skills && review.skills.length > 0) {\r\n      let common = [];\r\n      for (let i = 0; i < project.properties.length; i++) {\r\n        for (let j = 0; j < review.skills.length; j++) {\r\n          if (\r\n            project.properties[i].skillName.toLowerCase() ==\r\n            review.skills[j].skillName.toLowerCase()\r\n          ) {\r\n            common.push(\r\n              (project.properties[i].skillScore - review.skills[j].skillScore) /\r\n                project.properties[i].skillScore\r\n            );\r\n          }\r\n        }\r\n      }\r\n      console.log(common);\r\n      let result = common.map((n) => (1 - n) * 100);\r\n      sScore = 0;\r\n      console.log(result);\r\n      for (let i = 0; i < result.length; i++) {\r\n        sScore += result[i];\r\n      }\r\n      sScore = sScore / project.properties.length;\r\n      console.log(sScore);\r\n      const scoring = (kScore + sScore) / 2;\r\n      setScoring(scoring);\r\n    }\r\n  }\r\n\r\n  function sendRequest() {\r\n    addRequest({\r\n      applicationDate: new Date(),\r\n      student: activeUser,\r\n      project: project,\r\n      status: \"Request made By Student\",\r\n      scoring: scoring,\r\n    }).then((res) => setApplied(true));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Title: {project.title}</div>\r\n      <div>Description: {project.description}</div>\r\n      <div>Degree Type: {project.degreeType}</div>\r\n      <div>Titular:{projectOwner} </div>\r\n      <div>RecommendedSpecialization: {project.recommendedSpecialization}</div>\r\n      {!applied ? (\r\n        <button className=\"btn btn-success\" onClick={sendRequest}>\r\n          Apply For This Project\r\n        </button>\r\n      ) : (\r\n        <div>Your request has been sent!</div>\r\n      )}\r\n      <button onClick={calculateScoring}>Calculate</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectForStudent;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AvailableProjects.js",["133"],"import React, { useEffect, useState } from \"react\";\r\nimport { projectsForSpecificSpecialization } from \"../../services/ProjectService\";\r\nimport { useHistory } from \"react-router\";\r\nimport { DropdownButton } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst AvailableProjects = ({ activeUser }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [spec, setSpec] = useState(\"Specialization\");\r\n\r\n  function showProjects(spec) {\r\n    projectsForSpecificSpecialization(spec, activeUser.id).then((response) =>\r\n      setProjects(response.data)\r\n    );\r\n    setSpec(spec);\r\n  }\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the project selection page</h1>\r\n      <div>\r\n        Descriere despre cum functioneaza cele 3 metode de alegere a unui\r\n        proiect\r\n      </div>\r\n\r\n      <DropdownButton id=\"dropdown-item-button\" title={`${spec}`}>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"MON\")}>\r\n          MON\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"ELA\")}>\r\n          ELA\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"CTI\")}>\r\n          CTI\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"RST\")}>\r\n          RST\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"TST\")}>\r\n          TST\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Type of Degree</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.map((project) => (\r\n              <tr key={project.id}>\r\n                <td>{project.title}</td>\r\n                <td>{project.description}</td>\r\n                <td>{project.degreeType}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => history.push(`/project/${project.id}`)}\r\n                    className=\"btn btn-success\"\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvailableProjects;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js",["134","135","136"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { updateUser } from \"../services/ProfileUpdateService\";\r\nimport \"./AccountInfo.css\";\r\n\r\nconst AccountInfo = ({ activeUser, setActiveUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const {\r\n    username,\r\n    firstName,\r\n    lastName,\r\n    department,\r\n    email,\r\n    password,\r\n    typeOfUser,\r\n    avgGrade,\r\n    series,\r\n    degreeType,\r\n  } = activeUser;\r\n  const history = useHistory();\r\n\r\n  const isProfessor = () => {\r\n    return typeOfUser === \"professor\";\r\n  };\r\n\r\n  function validate(values) {\r\n    let errors = {};\r\n    if (!values.firstName) {\r\n      errors.firstName = \"Enter your first name\";\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = \"Enter your last name \";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Enter a valid email adress\";\r\n    }\r\n    if (!values.department) {\r\n      errors.department = \"Enter a department\";\r\n    }\r\n  }\r\n\r\n  function onSubmit(values) {\r\n    console.log(values);\r\n\r\n    updateUser(values).then(() => {\r\n      setActiveUser({\r\n        ...activeUser,\r\n        ...values,\r\n      });\r\n\r\n      setEditMode(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    // pe on click la edit setEditMode(true)\r\n    <div>\r\n      {!editMode ? (\r\n        <div>\r\n          <h2>Personal Information</h2>{\" \"}\r\n          <button\r\n            className=\"btn btn-info d-grid gap-2 col-1 mx-auto\"\r\n            onClick={() => setEditMode(true)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">First Name</th>\r\n                  <td>{firstName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Last Name</th>\r\n                  <td>{lastName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Username</th>\r\n                  <td>{username}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Email Address</th>\r\n                  <td>{email}</td>\r\n                </tr>\r\n                {typeOfUser === \"professor\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Department</th>\r\n                    <td>{department}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Series</th>\r\n                    <td>{series}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Average Grade</th>\r\n                    <td>{avgGrade}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Degree Type</th>\r\n                    <td>{degreeType}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Formik\r\n            initialValues={activeUser}\r\n            onSubmit={(values) => onSubmit(values)}\r\n            validate={validate}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n          >\r\n            {(props) => (\r\n              <Form className=\"col-sm-12 col-md-6 col-lg-4\">\r\n                <fieldset className=\"form-group col-form-label\">\r\n                  <label>FirstName: </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <label>LastName: </label>\r\n                  <Field type=\"text\" name=\"lastName\" className=\"form-control\" />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <label>Email: </label>\r\n                  <Field type=\"email\" name=\"email\" className=\"form-control\" />\r\n                </fieldset>\r\n\r\n                {isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Department: </label>\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"department\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Series: </label>\r\n                    <Field type=\"text\" name=\"series\" className=\"form-control\" />\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Average Grade: {props.values.avgGrade}</label>\r\n                    <br />\r\n                    <Field\r\n                      type=\"range\"\r\n                      className=\"form-range\"\r\n                      name=\"avgGrade\"\r\n                      min=\"0.0\"\r\n                      max=\"10.0\"\r\n                      step=\"0.1\"\r\n                    />\r\n\r\n                    {/* <Field type=\"text\" name=\"avgGrade\" className=\"form-control\" /> */}\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"row mb-3\">\r\n                    <legend className=\"col-form-label col-sm-2 pt-0\">\r\n                      DegreeType\r\n                    </legend>\r\n                    <div className=\"col-sm-10\">\r\n                      <div className=\"form-check\">\r\n                        <Field\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"degreeType\"\r\n                          id=\"gridRadios1\"\r\n                          value=\"Bachelor\"\r\n                        />\r\n                        <label className=\"form-check-label\" for=\"gridRadios1\">\r\n                          Bachelor\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <Field\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"degreeType\"\r\n                          id=\"gridRadios2\"\r\n                          value=\"Master\"\r\n                        />\r\n                        <label className=\"form-check-label\" for=\"gridRadios2\">\r\n                          Master\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </fieldset>\r\n                )}\r\n\r\n                <button className=\"btn btn-success\" type=\"submit\">\r\n                  Save\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectsPage.js",["137","138","139"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  addProject,\r\n  projectsForSpecificProfessor,\r\n  deleteProject,\r\n} from \"../../services/ProjectService\";\r\nimport \"./Form.css\";\r\nimport { DropdownButton } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst ProjectsPage = ({ activeUser }) => {\r\n  const history = useHistory();\r\n  const [projects, setProjects] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n\r\n  function retrieveProjects() {\r\n    projectsForSpecificProfessor(activeUser.id).then((response) => {\r\n      setProjects(response.data);\r\n      setFilteredProjects(response.data);\r\n    });\r\n  }\r\n  console.log(projects);\r\n\r\n  useEffect(() => {\r\n    retrieveProjects();\r\n  }, [reload]);\r\n\r\n  function addProject() {\r\n    history.push(\"/projects/-1\");\r\n  }\r\n\r\n  function updateProjectById(id) {\r\n    history.push(`projects/${id}`);\r\n  }\r\n\r\n  function deleteProjectById(projectId) {\r\n    deleteProject(projectId).then((r) => setReload(!reload));\r\n  }\r\n\r\n  function filterProjects(year) {\r\n    if (year !== \"ALL\") {\r\n      setFilteredProjects(projects.filter((elem) => elem.year == year));\r\n    } else {\r\n      setFilteredProjects(projects);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Projects List</h1>\r\n      <DropdownButton id=\"dropdown-item-button\" title={\"Year\"}>\r\n        <Dropdown.Item as=\"button\" onClick={() => filterProjects(\"2019\")}>\r\n          2019\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => filterProjects(\"2020\")}>\r\n          2020\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => filterProjects(\"2021\")}>\r\n          2021\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => filterProjects(\"ALL\")}>\r\n          ALL\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n      <div className=\"container\">\r\n        <table className=\"table table-striped\">\r\n          <thead\r\n            className=\"table-dark\"\r\n            style={{\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Type of Degree</th>\r\n              <th>Delete</th>\r\n              <th>Update</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredProjects.map((project) => (\r\n              <tr key={project.id}>\r\n                <td>{project.id}</td>\r\n                <td>{project.title}</td>\r\n                <td>{project.description}</td>\r\n                <td>{project.degreeType}</td>\r\n                <td>\r\n                  <button\r\n                    className=\" btn btn-danger\"\r\n                    onClick={() => deleteProjectById(project.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => updateProjectById(project.id)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\" btn btn-dark\"\r\n                    onClick={() =>\r\n                      history.push(`/projectDetails/${project.id}`)\r\n                    }\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"row\">\r\n          <button className=\"btn btn-info\" onClick={addProject}>\r\n            Add a new project\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectsPage;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectForm.js",["140","141","142","143","144"],"import { Formik, Form, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  addProject,\r\n  projectsForSpecificProfessor,\r\n  retrieveProjectById,\r\n  updateProject,\r\n} from \"../../services/ProjectService\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n\r\nconst ProjectForm = ({ professorId }) => {\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState({});\r\n  const history = useHistory();\r\n  const [keywordsSelected, setKeywordsSelected] = useState([]);\r\n\r\n  const options = [\"Java\", \"OOP\", \"React\"];\r\n\r\n  function onSubmit(values) {\r\n    console.log(id);\r\n    console.log(keywordsSelected);\r\n\r\n    const keywords = keywordsSelected.map((selected) => {\r\n      if (typeof selected === \"string\") {\r\n        return selected;\r\n      }\r\n\r\n      return selected.label;\r\n    });\r\n\r\n    if (id === \"-1\") {\r\n      addProject({ ...values, keywords, professorId }).then(() =>\r\n        history.push(\"/projects\")\r\n      );\r\n    } else {\r\n      updateProject({ ...values, keywords, professorId, id }).then(() =>\r\n        history.push(\"/projects\")\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    retrieveProjectById(id).then((response) => {\r\n      setProject(response.data);\r\n      if (response.data.keywords) {\r\n        setKeywordsSelected(response.data.keywords);\r\n      }\r\n    });\r\n  }, []);\r\n  console.log(project);\r\n\r\n  function validate() {}\r\n\r\n  return (\r\n    <>\r\n      <div>Project Information for ID - {id}</div>\r\n      <Formik\r\n        initialValues={{\r\n          title: project.title,\r\n          description: project.description,\r\n          degreeType: project.degreeType,\r\n          recommendedSpecialization: project.recommendedSpecialization,\r\n          year: project.year,\r\n          minGrade: project.minGrade,\r\n          maxGrade: project.maxGrade,\r\n          // keywords: project.keywords || [],\r\n          properties: project.properties || [],\r\n        }}\r\n        onSubmit={async (values) => onSubmit(values)}\r\n        validate={validate}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n      >\r\n        {(form) => (\r\n          <Form>\r\n            {console.log(form.values)}\r\n            <fieldset className=\"mb-3\">\r\n              <Field\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset className=\"mb-3\">\r\n              <Field className=\"form-control\" name=\"description\">\r\n                {({\r\n                  field, // { name, value, onChange, onBlur }\r\n                  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n                  meta,\r\n                }) => (\r\n                  <div>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      rows=\"10\"\r\n                      placeholder=\"Description\"\r\n                      {...field}\r\n                    />\r\n                    {meta.touched && meta.error && (\r\n                      <div className=\"error\">{meta.error}</div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </fieldset>\r\n\r\n            <label className=\"form-label\">Type of Degree</label>\r\n            <br />\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degreeType\"\r\n                value=\"Bachelor\"\r\n              />\r\n              <label className=\"form-check-label\">Bachelor</label>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degreeType\"\r\n                value=\"Master\"\r\n              />\r\n              <label className=\"form-check-label\">Master</label>\r\n            </div>\r\n\r\n            <div>Recommended for the following specialization students</div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"MON\"\r\n              />\r\n              <span>MON</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"ELA\"\r\n              />\r\n              <span>ELA</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"CTI\"\r\n              />\r\n              <span>CTI</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"RST\"\r\n              />\r\n              <span>RST</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"TST\"\r\n              />\r\n              <span>TST</span>\r\n            </div>\r\n\r\n            <div>Minimum Average Grade Required</div>\r\n\r\n            <Field name=\"minGrade\" type=\"number\" min=\"0.0\" max=\"10.0\" />\r\n\r\n            <div>Maximum Average Grade Required</div>\r\n            <Field name=\"maxGrade\" type=\"number\" min=\"0.0\" max=\"10.0\" />\r\n\r\n            <FieldArray name=\"properties\">\r\n              {({ insert, remove, push }) => (\r\n                <div>\r\n                  {form.values.properties.length > 0\r\n                    ? form.values.properties.map((property, index) => (\r\n                        <div className=\"row\" key={index}>\r\n                          <div className=\"col\">\r\n                            <label htmlFor={`properties.${index}.skillName`}>\r\n                              SkillName\r\n                            </label>\r\n                            <Field\r\n                              value={property.skillName}\r\n                              name={`properties.${index}.skillName`}\r\n                              type=\"text\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col\">\r\n                            <label htmlFor={`properties.${index}.skillScore`}>\r\n                              SkillScore\r\n                            </label>\r\n                            <Field\r\n                              value={property.skillScore}\r\n                              name={`properties.${index}.skillScore`}\r\n                              type=\"number\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col\">\r\n                            <a\r\n                              className=\"btn-floating btn-small waves-effect waves-light red\"\r\n                              onClick={() => remove(index)}\r\n                            >\r\n                              <i className=\"materials-icons\">X</i>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    : []}\r\n\r\n                  <a\r\n                    className=\"waves-effect waves-light btn btn-primary btn-medium\"\r\n                    onClick={() => push({ skillName: \"\", skillScore: \"\" })}\r\n                  >\r\n                    Add Skill\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </FieldArray>\r\n\r\n            <br />\r\n\r\n            <button className=\"btn btn-success float-right\" type=\"submit\">\r\n              Save\r\n            </button>\r\n            <br />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Fragment>\r\n        <label>Keywords</label>\r\n        <Typeahead\r\n          id=\"typeahead-multi\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setKeywordsSelected}\r\n          options={options}\r\n          placeholder=\"Choose or type...\"\r\n          selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\StudentRequests.js",["145"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { requestsForSpecificStudent } from '../../services/ProjectService';\r\nimport {  useHistory } from 'react-router';\r\n\r\nconst StudentRequests = ({activeUser}) => {\r\n\r\n    const [requests, setRequests] = useState([]);\r\n    const history = useHistory();\r\n\r\n    function showRequests(){\r\n        requestsForSpecificStudent(activeUser.id).then((response)=> setRequests(response.data))\r\n        \r\n    }\r\n\r\n    useEffect(()=> {\r\n        showRequests()\r\n    }, [])\r\n\r\nif(!requests)\r\nreturn <div>Loading...</div>\r\n\r\n\r\nconsole.log(requests)\r\n\r\n    return(\r\n        <div>\r\n            <h1>Here you can see all projects you applied for!</h1>\r\n\r\n            <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Type of Degree</th>\r\n                        <th>Details</th>\r\n                        \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {requests.map(request => \r\n                        <tr key={request.id}>\r\n                            <td>{request.project.title}</td>\r\n                            <td>{request.project.description}</td>\r\n                            <td>{request.status}</td>\r\n                            <td><button onClick={()=>history.push(`/requestDetailsStud/${request.id}`)} className=\"btn btn-success\">Details</button></td>\r\n                        </tr>)}\r\n                </tbody>\r\n            </table>\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentRequests","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\RequestDetails.js",["146","147","148"],"import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport { getRequestById } from '../../services/ProjectService';\r\nimport {  useHistory } from 'react-router';\r\n\r\n\r\nconst RequestDetails = () => {\r\n\r\n    const{id} = useParams();\r\n    const history = useHistory();\r\n    const [requestInfo, setRequestInfo] = useState()\r\n\r\n    useEffect(()=> {\r\n        getRequestById(id).then((response) => setRequestInfo(response.data))\r\n    } ,[])\r\n\r\n\r\n    function sendResponseToStudent(){\r\n        \r\n    }\r\n\r\n\r\nif (!requestInfo)\r\nreturn <span>Loading...</span>\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <div>Request Information</div>\r\n            <div>Project Title:{requestInfo.project.title} </div>\r\n            <div>Description:{requestInfo.project.description} </div>\r\n            <div>Student:{requestInfo.student.firstName} {requestInfo.student.lastName} </div>\r\n            <div>Type of Degree:{requestInfo.project.degreeType} </div>\r\n            <div> \r\n                <button className=\"btn btn-success\">Accept Student</button>\r\n                <button className=\"btn btn-danger\">Decline Student</button>\r\n            </div>\r\n            \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default RequestDetails","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectDetails.js",["149","150","151","152","153","154","155","156","157","158"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectRequests.js",["159","160"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  requestsForSpecificProject,\r\n  updateRequestStatus,\r\n} from \"../../services/ProjectService\";\r\n\r\nconst ProjectRequests = ({ projectId }) => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [selectedRequest, setSelectedRequest] = useState({ student: [] });\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    requestsForSpecificProject(projectId).then((response) => {\r\n      setRequests(response.data);\r\n      console.log(requests);\r\n    });\r\n  }, [show]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Status</th>\r\n              <th>See Profile</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {requests.map((request) => (\r\n              <tr key={request.id}>\r\n                <td>\r\n                  {request.student.firstName} {request.student.lastName}\r\n                </td>\r\n                <td>{request.status}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                      handleShow();\r\n                      console.log(request);\r\n                      setSelectedRequest(request);\r\n                    }}\r\n                  >\r\n                    See Profile\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Student Profile :{\" \"}\r\n            {selectedRequest ? selectedRequest.student.firstName : \" err\"}{\" \"}\r\n            {selectedRequest.student.lastName}{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>Series: {selectedRequest.student.series}</div>\r\n          <div>Average Grade: {selectedRequest.student.avgGrade}</div>\r\n          <div>Email: {selectedRequest.student.email}</div>\r\n          <div>Scoring: {selectedRequest.scoring}</div>\r\n          <div>\r\n            Application Date:{\" \"}\r\n            {moment(selectedRequest.applicationDate).format(\"YYYY-MM-DD\")}{\" \"}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"warning\"\r\n            onClick={() => {\r\n              updateRequestStatus(\r\n                selectedRequest.id,\r\n                \"Declined By Professor\"\r\n              ).then((r) => handleClose());\r\n            }}\r\n          >\r\n            Decline\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              updateRequestStatus(\r\n                selectedRequest.id,\r\n                \"Accepted By Professor\"\r\n              ).then((r) => handleClose());\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectRequests;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\RequestDetailsStud.js",["161","162"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  assignProjectToStudent,\r\n  deleteRequest,\r\n  getProjectOwner,\r\n  getRequestById,\r\n  updateRequestStatus,\r\n} from \"../../services/ProjectService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useHistory } from \"react-router\";\r\nconst RequestDetailsStud = ({ activeUser }) => {\r\n  const [project, setProject] = useState([]);\r\n  const [projectOwner, setProjectOwner] = useState(\"\");\r\n  const [request, setRequest] = useState(\"\");\r\n  const { id } = useParams();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [reload, setReload] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getRequestById(id).then((response) => {\r\n      setRequest(response.data);\r\n      setProject(response.data.project);\r\n      getProjectOwner(response.data.project.professorId).then((r) =>\r\n        setProjectOwner(r.data)\r\n      );\r\n    });\r\n  }, [reload]);\r\n\r\n  if (!project) return <span>Loading...</span>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card text-dark bg-light\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{project.title}</h5>\r\n          <h5 className=\"blockquote-footer\">\r\n            Profesor Coordonator: {projectOwner}\r\n          </h5>\r\n          <p>Status: {request.status}</p>\r\n          <p className=\"card-text\">{project.description}</p>\r\n          <p>Minimum Average Grade Required: {project.minGrade}</p>\r\n          {\r\n            <ul className=\"\">\r\n              Keywords\r\n              {project.keywords !== undefined\r\n                ? project.keywords.map((keyword, index) => (\r\n                    <li key={index} className=\"\">\r\n                      {keyword}\r\n                    </li>\r\n                  ))\r\n                : \"\"}\r\n            </ul>\r\n          }\r\n          <ul className=\"\">\r\n            Skills\r\n            {project.properties !== undefined\r\n              ? project.properties.map((skill, index) => (\r\n                  <li key={index} className=\"\">\r\n                    <span>\r\n                      {skill.skillName} : {skill.skillScore}\r\n                    </span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </ul>\r\n          <p>Scoring: {request.scoring}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          {request.status === \"Accepted By Professor\" ? (\r\n            <Button\r\n              className=\"float-right\"\r\n              variant=\"primary\"\r\n              onClick={handleShow}\r\n            >\r\n              Accept\r\n            </Button>\r\n          ) : (\r\n            <div>Request Pending...</div>\r\n          )}\r\n          {request.status === \"Accepted By Professor\" && (\r\n            <button\r\n              onClick={() =>\r\n                deleteRequest(request.id).then((r) => {\r\n                  setReload(!reload);\r\n                  handleClose();\r\n                  history.push(\"/studentRequests\");\r\n                })\r\n              }\r\n              className=\"btn btn-danger float-left\"\r\n            >\r\n              Decline\r\n            </button>\r\n          )}\r\n        </div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Warning!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              This action cannot be reversed. By clicking ACCEPT you set{\" \"}\r\n              {project.title} as your Bachelor Project\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"warning\">Decline</Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={() => {\r\n                assignProjectToStudent(project, activeUser).then((r) =>\r\n                  handleClose()\r\n                );\r\n              }}\r\n            >\r\n              Accept\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestDetailsStud;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AssignedProject.js",["163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport { retrieveAssignedProject } from \"../../services/ProjectService\";\r\n\r\nconst AssignedProject = ({ activeUser }) => {\r\n  const [coreProject, setCoreProject] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveAssignedProject(activeUser.id).then((response) =>\r\n      setCoreProject(response.data)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card text-dark bg-light\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">\r\n            {coreProject.title} <br />\r\n          </h4>\r\n          <h5 className=\"card-title\"> I) General Information</h5>\r\n          {/* <h5 className=\"blockquote-footer\">\r\n            Profesor Coordonator: {projectOwner}\r\n          </h5> */}\r\n          {/* <p>Status: {request.status}</p> */}\r\n          <p className=\"card-text\">{coreProject.description}</p>\r\n          <h7>Minimum Average Grade Required: {coreProject.minGrade}</h7>\r\n          {\r\n            <ul className=\"\">\r\n              Keywords\r\n              {coreProject.keywords != undefined\r\n                ? coreProject.keywords.map((keyword) => (\r\n                    <li className=\"\">{keyword}</li>\r\n                  ))\r\n                : \"\"}\r\n            </ul>\r\n          }\r\n          <ul className=\"\">\r\n            Skills\r\n            {coreProject.properties != undefined\r\n              ? coreProject.properties.map((skill) => (\r\n                  <li className=\"\">\r\n                    <span>\r\n                      {skill.skillName} : {skill.skillScore}\r\n                    </span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </ul>\r\n          <h5 className=\"card-title\"> II) Stages and Deadlines</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignedProject;\r\n","C:\\Users\\pc\\licenta\\src\\components\\shared\\DatePicker.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\Assesment.js",["166","167","168","169","170","171"],"import { Field, FieldArray, Formik, Form } from \"formik\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {\r\n  retrieveAllKeywords,\r\n  retrieveProperties,\r\n  setAssesmentReview,\r\n} from \"../../services/AssesmentService\";\r\n\r\nconst Assesment = ({ activeUser }) => {\r\n  const [keywordsList, setKeywordsList] = useState([]);\r\n  const [skillsList, setSkillsList] = useState([]);\r\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    retrieveAllKeywords().then((response) => setKeywordsList(response.data));\r\n    retrieveProperties().then((response) => {\r\n      let skills = [];\r\n      response.data.map((skill) => skills.push(skill.skillName));\r\n      setSkillsList(skills);\r\n    });\r\n  }, []);\r\n\r\n  function ratingChanged(newRating, skill) {\r\n    setSkills(\r\n      skills.map((element) => {\r\n        if (element.skillName == skill) {\r\n          return { ...element, skillScore: newRating };\r\n        } else return element;\r\n      })\r\n    );\r\n\r\n    console.log(skills);\r\n    //console.log(skills);\r\n    // skills.push({ skillName: skill, skillScore: newRating });\r\n    // console.log(skills);\r\n  }\r\n\r\n  function onSubmit() {\r\n    let keywords = [...selectedKeywords];\r\n    let skillsObject = { keywords, skills };\r\n    console.log(skillsObject);\r\n    setAssesmentReview(activeUser.id, skillsObject);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <label>Keywords</label>\r\n        <Typeahead\r\n          id=\"typeahead\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setSelectedKeywords}\r\n          options={keywordsList}\r\n          placeholder=\"Choose or type...\"\r\n          //selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n\r\n      <Fragment>\r\n        <label>Skills</label>\r\n        <Typeahead\r\n          id=\"typeahead\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setSelectedSkills}\r\n          options={skillsList}\r\n          placeholder=\"Choose or type...\"\r\n          //selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setButtonClicked(!buttonClicked);\r\n          console.log(selectedSkills);\r\n          setSkills(\r\n            selectedSkills.map((skill) => ({\r\n              skillName: skill,\r\n              skillScore: null,\r\n            }))\r\n          );\r\n        }}\r\n      >\r\n        Rate your skills!\r\n      </button>\r\n\r\n      {buttonClicked == true && (\r\n        <div>\r\n          <label>Now let's rate your skills</label>\r\n          <div>\r\n            {selectedSkills.map((skill, key) => (\r\n              <div className=\"row\" key={key}>\r\n                <div className=\"col\">{skill}</div>\r\n                <div className=\"col\">\r\n                  <ReactStars\r\n                    count={5}\r\n                    onChange={(newRating) => ratingChanged(newRating, skill)}\r\n                    size={24}\r\n                    activeColor=\"#ffd700\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <button className=\"btn btn-success\" onClick={onSubmit}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\AssesmentService.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":11,"column":3,"nodeType":"178","messageId":"179","endLine":11,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":40,"column":6,"nodeType":"182","endLine":40,"endColumn":8,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":119,"column":15,"nodeType":"186","endLine":119,"endColumn":46},{"ruleId":"176","severity":1,"message":"187","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"188","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"189","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":13},{"ruleId":"176","severity":1,"message":"188","line":4,"column":26,"nodeType":"178","messageId":"179","endLine":4,"endColumn":32},{"ruleId":"176","severity":1,"message":"190","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":17},{"ruleId":"176","severity":1,"message":"191","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"184","severity":1,"message":"192","line":19,"column":13,"nodeType":"186","endLine":19,"endColumn":41},{"ruleId":"180","severity":1,"message":"193","line":30,"column":6,"nodeType":"182","endLine":30,"endColumn":8,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":57,"column":59,"nodeType":"197","messageId":"198","endLine":57,"endColumn":61},{"ruleId":"176","severity":1,"message":"199","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"200","line":3,"column":31,"nodeType":"178","messageId":"179","endLine":3,"endColumn":43},{"ruleId":"176","severity":1,"message":"201","line":15,"column":5,"nodeType":"178","messageId":"179","endLine":15,"endColumn":13},{"ruleId":"176","severity":1,"message":"202","line":21,"column":9,"nodeType":"178","messageId":"179","endLine":21,"endColumn":16},{"ruleId":"176","severity":1,"message":"203","line":4,"column":3,"nodeType":"178","messageId":"179","endLine":4,"endColumn":13},{"ruleId":"180","severity":1,"message":"204","line":28,"column":6,"nodeType":"182","endLine":28,"endColumn":14,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"196","line":44,"column":63,"nodeType":"197","messageId":"198","endLine":44,"endColumn":65},{"ruleId":"176","severity":1,"message":"200","line":1,"column":31,"nodeType":"178","messageId":"179","endLine":1,"endColumn":43},{"ruleId":"176","severity":1,"message":"206","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":31},{"ruleId":"180","severity":1,"message":"207","line":51,"column":6,"nodeType":"182","endLine":51,"endColumn":8,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"192","line":222,"column":29,"nodeType":"186","endLine":225,"endColumn":30},{"ruleId":"184","severity":1,"message":"192","line":233,"column":19,"nodeType":"186","endLine":236,"endColumn":20},{"ruleId":"180","severity":1,"message":"209","line":18,"column":8,"nodeType":"182","endLine":18,"endColumn":10,"suggestions":"210"},{"ruleId":"176","severity":1,"message":"202","line":10,"column":11,"nodeType":"178","messageId":"179","endLine":10,"endColumn":18},{"ruleId":"180","severity":1,"message":"207","line":15,"column":8,"nodeType":"182","endLine":15,"endColumn":10,"suggestions":"211"},{"ruleId":"176","severity":1,"message":"212","line":18,"column":14,"nodeType":"178","messageId":"179","endLine":18,"endColumn":35},{"ruleId":"176","severity":1,"message":"213","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":29},{"ruleId":"176","severity":1,"message":"200","line":11,"column":31,"nodeType":"178","messageId":"179","endLine":11,"endColumn":43},{"ruleId":"176","severity":1,"message":"214","line":12,"column":8,"nodeType":"178","messageId":"179","endLine":12,"endColumn":15},{"ruleId":"176","severity":1,"message":"215","line":22,"column":10,"nodeType":"178","messageId":"179","endLine":22,"endColumn":18},{"ruleId":"176","severity":1,"message":"216","line":22,"column":20,"nodeType":"178","messageId":"179","endLine":22,"endColumn":31},{"ruleId":"180","severity":1,"message":"217","line":40,"column":6,"nodeType":"182","endLine":40,"endColumn":14,"suggestions":"218"},{"ruleId":"195","severity":1,"message":"219","line":100,"column":39,"nodeType":"197","messageId":"198","endLine":100,"endColumn":41},{"ruleId":"195","severity":1,"message":"219","line":111,"column":41,"nodeType":"197","messageId":"198","endLine":111,"endColumn":43},{"ruleId":"184","severity":1,"message":"192","line":231,"column":31,"nodeType":"186","endLine":234,"endColumn":32},{"ruleId":"184","severity":1,"message":"192","line":241,"column":21,"nodeType":"186","endLine":244,"endColumn":22},{"ruleId":"176","severity":1,"message":"202","line":15,"column":9,"nodeType":"178","messageId":"179","endLine":15,"endColumn":16},{"ruleId":"180","severity":1,"message":"220","line":25,"column":6,"nodeType":"182","endLine":25,"endColumn":12,"suggestions":"221"},{"ruleId":"176","severity":1,"message":"222","line":7,"column":3,"nodeType":"178","messageId":"179","endLine":7,"endColumn":22},{"ruleId":"180","severity":1,"message":"207","line":32,"column":6,"nodeType":"182","endLine":32,"endColumn":14,"suggestions":"223"},{"ruleId":"180","severity":1,"message":"224","line":11,"column":6,"nodeType":"182","endLine":11,"endColumn":8,"suggestions":"225"},{"ruleId":"195","severity":1,"message":"219","line":30,"column":37,"nodeType":"197","messageId":"198","endLine":30,"endColumn":39},{"ruleId":"195","severity":1,"message":"219","line":39,"column":37,"nodeType":"197","messageId":"198","endLine":39,"endColumn":39},{"ruleId":"176","severity":1,"message":"226","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":15},{"ruleId":"176","severity":1,"message":"227","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":27},{"ruleId":"176","severity":1,"message":"228","line":1,"column":29,"nodeType":"178","messageId":"179","endLine":1,"endColumn":35},{"ruleId":"176","severity":1,"message":"229","line":1,"column":37,"nodeType":"178","messageId":"179","endLine":1,"endColumn":41},{"ruleId":"195","severity":1,"message":"196","line":31,"column":31,"nodeType":"197","messageId":"198","endLine":31,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":97,"column":22,"nodeType":"197","messageId":"198","endLine":97,"endColumn":24},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'isUserLoggedIn' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["232"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","'logout' is defined but never used.","'axios' is defined but never used.","'userEvent' is defined but never used.","'isProfessor' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'activeUser.id', 'calculateScoring', and 'id'. Either include them or remove the dependency array.",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'ErrorMessage' is defined but never used.","'password' is assigned a value but never used.","'history' is assigned a value but never used.","'addProject' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveProjects'. Either include it or remove the dependency array.",["234"],"'projectsForSpecificProfessor' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'showRequests'. Either include it or remove the dependency array.",["236"],["237"],"'sendResponseToStudent' is defined but never used.","'requestsForSpecificProject' is defined but never used.","'emailjs' is defined but never used.","'requests' is assigned a value but never used.","'setRequests' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'projectInfo'. Either include them or remove the dependency array.",["238"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'projectId' and 'requests'. Either include them or remove the dependency array.",["239"],"'updateRequestStatus' is defined but never used.",["240"],"React Hook useEffect has a missing dependency: 'activeUser.id'. Either include it or remove the dependency array.",["241"],"'Field' is defined but never used.","'FieldArray' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"248","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [activeUser]",{"range":"261","text":"262"},"Update the dependencies array to be: [activeUser.id, calculateScoring, id]",{"range":"263","text":"264"},"Update the dependencies array to be: [reload, retrieveProjects]",{"range":"265","text":"266"},"Update the dependencies array to be: [id]",{"range":"267","text":"268"},"Update the dependencies array to be: [showRequests]",{"range":"269","text":"270"},{"range":"271","text":"268"},"Update the dependencies array to be: [id, projectInfo, reload]",{"range":"272","text":"273"},"Update the dependencies array to be: [projectId, requests, show]",{"range":"274","text":"275"},"Update the dependencies array to be: [id, reload]",{"range":"276","text":"277"},"Update the dependencies array to be: [activeUser.id]",{"range":"278","text":"279"},[1698,1700],"[activeUser]",[972,974],"[activeUser.id, calculateScoring, id]",[849,857],"[reload, retrieveProjects]",[1468,1470],"[id]",[512,514],"[showRequests]",[471,473],[1355,1363],"[id, projectInfo, reload]",[829,835],"[projectId, requests, show]",[1109,1117],"[id, reload]",[367,369],"[activeUser.id]"]