[{"C:\\Users\\pc\\licenta\\src\\index.js":"1","C:\\Users\\pc\\licenta\\src\\App.js":"2","C:\\Users\\pc\\licenta\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\licenta\\src\\MiniApp.js":"4","C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js":"5","C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js":"6","C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js":"7","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js":"8","C:\\Users\\pc\\licenta\\src\\components\\Header.js":"9","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js":"10","C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js":"11","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\ProjectForStudent.js":"12","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AvailableProjects.js":"13","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js":"14","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectsPage.js":"15","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectForm.js":"16","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\StudentRequests.js":"17","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\RequestDetails.js":"18","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectDetails.js":"19","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectRequests.js":"20","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\RequestDetailsStud.js":"21","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AssignedProject.js":"22","C:\\Users\\pc\\licenta\\src\\components\\shared\\DatePicker.js":"23","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\Assesment.js":"24","C:\\Users\\pc\\licenta\\src\\components\\services\\AssesmentService.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":209,"mtime":1612272407465,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":3832,"mtime":1624286880554,"results":"30","hashOfConfig":"27"},{"size":3820,"mtime":1617378241459,"results":"31","hashOfConfig":"27"},{"size":1027,"mtime":1623844053236,"results":"32","hashOfConfig":"27"},{"size":578,"mtime":1615210444516,"results":"33","hashOfConfig":"27"},{"size":376,"mtime":1609087880641,"results":"34","hashOfConfig":"27"},{"size":3099,"mtime":1621417344793,"results":"35","hashOfConfig":"27"},{"size":307,"mtime":1609423931339,"results":"36","hashOfConfig":"27"},{"size":2722,"mtime":1624561600109,"results":"37","hashOfConfig":"27"},{"size":3283,"mtime":1624560868353,"results":"38","hashOfConfig":"27"},{"size":2454,"mtime":1617376219983,"results":"39","hashOfConfig":"27"},{"size":7399,"mtime":1615201376497,"results":"40","hashOfConfig":"27"},{"size":3895,"mtime":1624567873973,"results":"41","hashOfConfig":"27"},{"size":8844,"mtime":1621425236489,"results":"42","hashOfConfig":"27"},{"size":1724,"mtime":1612709159140,"results":"43","hashOfConfig":"27"},{"size":1255,"mtime":1612263032757,"results":"44","hashOfConfig":"27"},{"size":6162,"mtime":1624559170934,"results":"45","hashOfConfig":"27"},{"size":3414,"mtime":1623507294882,"results":"46","hashOfConfig":"27"},{"size":4198,"mtime":1624562688171,"results":"47","hashOfConfig":"27"},{"size":1840,"mtime":1617377337314,"results":"48","hashOfConfig":"27"},{"size":580,"mtime":1624559255890,"results":"49","hashOfConfig":"27"},{"size":3685,"mtime":1623498393032,"results":"50","hashOfConfig":"27"},{"size":549,"mtime":1623499890156,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"60z965",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\pc\\licenta\\src\\index.js",[],["114","115"],"C:\\Users\\pc\\licenta\\src\\App.js",[],"C:\\Users\\pc\\licenta\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\licenta\\src\\MiniApp.js",["116","117"],"C:\\Users\\pc\\licenta\\src\\components\\LoginPage.js",["118"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  executeJwtAuthService,\r\n  existingUser,\r\n  registerSuccessful,\r\n} from \"./services/LoginService\";\r\nimport background from \"../img/grad.jpg\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst LoginPage = ({ setActiveUser }) => {\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    hasLoginFailed: false,\r\n    showSuccessMessage: false,\r\n  });\r\n\r\n  function handleChange(e) {\r\n    //console.log(state);\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function loginClicked() {\r\n    executeJwtAuthService(state.username, state.password)\r\n      .then((response) => {\r\n        registerSuccessful(state.username, response.data.token);\r\n        history.push(`/welcome`);\r\n      })\r\n      .catch(() => {\r\n        setState({\r\n          ...state,\r\n          hasLoginFailed: true,\r\n          showSuccessMessage: false,\r\n        });\r\n      });\r\n\r\n    existingUser(state.username)\r\n      .then((res) => {\r\n        setActiveUser(res.data);\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n        //    console.log(setActiveUser)\r\n        //   localStorage.setItem(\"user\", res.data.typeOfUser)\r\n      })\r\n      .catch(() => {\r\n        setState({\r\n          ...state,\r\n          hasLoginFailed: true,\r\n        });\r\n      });\r\n  }\r\n  console.log(state);\r\n\r\n  return (\r\n    <div\r\n      className=\"background p-5 text-center bg-image img-fluid\"\r\n      style={{\r\n        backgroundImage: `url(${background})`,\r\n        height: \"100vh\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n      }}\r\n    >\r\n      {/* <img src={background} className=\"img\"/> */}\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card-login card col-sm-8 col-md-4 col-lg-3 offset-md-4 offset-lg-4\">\r\n          <div className=\"card-header\">\r\n            <h3>Sign In</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"input-group form-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  placeholder=\"username\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"input-group form-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fas fa-key\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Login\"\r\n                  className=\"btn float-right btn-outline-warning\"\r\n                  onClick={loginClicked}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"d-flex justify-content-center \">\r\n              <a className=\"forgot\" href=\"#\">\r\n                Forgot your password?\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\LoginService.js",["119"],"C:\\Users\\pc\\licenta\\src\\components\\WelcomePage.js",["120","121"],"import Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport {logout} from './services/LoginService'\r\nimport axios from 'axios'\r\n\r\nconst WelcomePage = () => {\r\n\r\n    const [message, setMessage] = useState('nu merge');\r\n    function check(){\r\n        Axios.get('http://localhost:8081/test').then(res => setMessage(res.data))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>Salut, te ai autentificat cu succes </div>\r\n       \r\n       <button onClick={check}>Check Cors</button>\r\n       <div>{message}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","C:\\Users\\pc\\licenta\\src\\components\\AuthenticatedRoute.js",[],"C:\\Users\\pc\\licenta\\src\\components\\Header.js",["122","123","124","125"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isUserLoggedIn, logout } from \"./services/LoginService\";\r\nimport userEvent from \"@testing-library/user-event\";\r\nimport isProfessor from \"./pages/AccountInfo\";\r\n\r\nconst Header = ({ activeUser, setActiveUser }) => {\r\n  function logout() {\r\n    sessionStorage.removeItem(\"authenticatedUser\");\r\n    setActiveUser({ id: \"\" });\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n        {isUserLoggedIn() && (\r\n          <div>\r\n            <a className=\"navbar-brand\">{activeUser.username}</a>\r\n          </div>\r\n        )}\r\n        <ul className=\"navbar-nav\">\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/welcome\">\r\n                Homepage\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() && activeUser.typeOfUser === \"professor\" && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/projects\">\r\n                Projects\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            !activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/availableProjects\">\r\n                  Available Projects\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/accountInfo\">\r\n                Account Information\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            !activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/studentRequests\">\r\n                  Requests\r\n                </Link>\r\n              </li>\r\n            )}\r\n          {isUserLoggedIn() && activeUser.typeOfUser === \"student\" && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/skillAssesment\">\r\n                Skills Assesment\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() &&\r\n            activeUser.typeOfUser === \"student\" &&\r\n            activeUser.projectId && (\r\n              <li>\r\n                <Link className=\"nav-link\" to=\"/assignedProject\">\r\n                  AssignedProject\r\n                </Link>\r\n              </li>\r\n            )}\r\n        </ul>\r\n        <ul className=\"navbar nav navbar-collapse justify-content-end\">\r\n          {!isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n          )}\r\n          {isUserLoggedIn() && (\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/logout\" onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\ProfileUpdateService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\services\\ProjectService.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\ProjectForStudent.js",["126","127"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AvailableProjects.js",["128"],"import React, { useEffect, useState } from \"react\";\r\nimport { projectsForSpecificSpecialization } from \"../../services/ProjectService\";\r\nimport { useHistory } from \"react-router\";\r\nimport { DropdownButton } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst AvailableProjects = ({ activeUser }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [spec, setSpec] = useState(\"Specialization\");\r\n\r\n  function showProjects(spec) {\r\n    projectsForSpecificSpecialization(spec, activeUser.id).then((response) =>\r\n      setProjects(response.data)\r\n    );\r\n    setSpec(spec);\r\n  }\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the project selection page</h1>\r\n      <div>\r\n        Descriere despre cum functioneaza cele 3 metode de alegere a unui\r\n        proiect\r\n      </div>\r\n\r\n      <DropdownButton id=\"dropdown-item-button\" title={`${spec}`}>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"MON\")}>\r\n          MON\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"ELA\")}>\r\n          ELA\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"CTI\")}>\r\n          CTI\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"RST\")}>\r\n          RST\r\n        </Dropdown.Item>\r\n        <Dropdown.Item as=\"button\" onClick={() => showProjects(\"TST\")}>\r\n          TST\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Type of Degree</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.map((project) => (\r\n              <tr key={project.id}>\r\n                <td>{project.title}</td>\r\n                <td>{project.description}</td>\r\n                <td>{project.degreeType}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => history.push(`/project/${project.id}`)}\r\n                    className=\"btn btn-success\"\r\n                  >\r\n                    Details\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvailableProjects;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\AccountInfo.js",["129","130","131"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { updateUser } from \"../services/ProfileUpdateService\";\r\nimport \"./AccountInfo.css\";\r\n\r\nconst AccountInfo = ({ activeUser, setActiveUser }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const {\r\n    username,\r\n    firstName,\r\n    lastName,\r\n    department,\r\n    email,\r\n    password,\r\n    typeOfUser,\r\n    avgGrade,\r\n    series,\r\n    degreeType,\r\n  } = activeUser;\r\n  const history = useHistory();\r\n\r\n  const isProfessor = () => {\r\n    return typeOfUser === \"professor\";\r\n  };\r\n\r\n  function validate(values) {\r\n    let errors = {};\r\n    if (!values.firstName) {\r\n      errors.firstName = \"Enter your first name\";\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = \"Enter your last name \";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Enter a valid email adress\";\r\n    }\r\n    if (!values.department) {\r\n      errors.department = \"Enter a department\";\r\n    }\r\n  }\r\n\r\n  function onSubmit(values) {\r\n    console.log(values);\r\n\r\n    updateUser(values).then(() => {\r\n      setActiveUser({\r\n        ...activeUser,\r\n        ...values,\r\n      });\r\n\r\n      setEditMode(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    // pe on click la edit setEditMode(true)\r\n    <div>\r\n      {!editMode ? (\r\n        <div>\r\n          <h2>Personal Information</h2>{\" \"}\r\n          <button\r\n            className=\"btn btn-info d-grid gap-2 col-1 mx-auto\"\r\n            onClick={() => setEditMode(true)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">First Name</th>\r\n                  <td>{firstName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Last Name</th>\r\n                  <td>{lastName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Username</th>\r\n                  <td>{username}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Email Address</th>\r\n                  <td>{email}</td>\r\n                </tr>\r\n                {typeOfUser === \"professor\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Department</th>\r\n                    <td>{department}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Series</th>\r\n                    <td>{series}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Average Grade</th>\r\n                    <td>{avgGrade}</td>\r\n                  </tr>\r\n                )}\r\n\r\n                {typeOfUser === \"student\" && (\r\n                  <tr>\r\n                    <th scope=\"row\">Degree Type</th>\r\n                    <td>{degreeType}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Formik\r\n            initialValues={activeUser}\r\n            onSubmit={(values) => onSubmit(values)}\r\n            validate={validate}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n          >\r\n            {(props) => (\r\n              <Form className=\"col-sm-12 col-md-6 col-lg-4\">\r\n                <fieldset className=\"form-group col-form-label\">\r\n                  <label>FirstName: </label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <label>LastName: </label>\r\n                  <Field type=\"text\" name=\"lastName\" className=\"form-control\" />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <label>Email: </label>\r\n                  <Field type=\"email\" name=\"email\" className=\"form-control\" />\r\n                </fieldset>\r\n\r\n                {isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Department: </label>\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"department\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Series: </label>\r\n                    <Field type=\"text\" name=\"series\" className=\"form-control\" />\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"form-group\">\r\n                    <label>Average Grade: {props.values.avgGrade}</label>\r\n                    <br />\r\n                    <Field\r\n                      type=\"range\"\r\n                      className=\"form-range\"\r\n                      name=\"avgGrade\"\r\n                      min=\"0.0\"\r\n                      max=\"10.0\"\r\n                      step=\"0.1\"\r\n                    />\r\n\r\n                    {/* <Field type=\"text\" name=\"avgGrade\" className=\"form-control\" /> */}\r\n                  </fieldset>\r\n                )}\r\n\r\n                {!isProfessor() && (\r\n                  <fieldset className=\"row mb-3\">\r\n                    <legend className=\"col-form-label col-sm-2 pt-0\">\r\n                      DegreeType\r\n                    </legend>\r\n                    <div className=\"col-sm-10\">\r\n                      <div className=\"form-check\">\r\n                        <Field\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"degreeType\"\r\n                          id=\"gridRadios1\"\r\n                          value=\"Bachelor\"\r\n                        />\r\n                        <label className=\"form-check-label\" for=\"gridRadios1\">\r\n                          Bachelor\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <Field\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"degreeType\"\r\n                          id=\"gridRadios2\"\r\n                          value=\"Master\"\r\n                        />\r\n                        <label className=\"form-check-label\" for=\"gridRadios2\">\r\n                          Master\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </fieldset>\r\n                )}\r\n\r\n                <button className=\"btn btn-success\" type=\"submit\">\r\n                  Save\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectsPage.js",["132","133","134"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectForm.js",["135","136","137","138","139"],"import { Formik, Form, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  addProject,\r\n  projectsForSpecificProfessor,\r\n  retrieveProjectById,\r\n  updateProject,\r\n} from \"../../services/ProjectService\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n\r\nconst ProjectForm = ({ professorId }) => {\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState({});\r\n  const history = useHistory();\r\n  const [keywordsSelected, setKeywordsSelected] = useState([]);\r\n\r\n  const options = [\"Java\", \"OOP\", \"React\"];\r\n\r\n  function onSubmit(values) {\r\n    console.log(id);\r\n    console.log(keywordsSelected);\r\n\r\n    const keywords = keywordsSelected.map((selected) => {\r\n      if (typeof selected === \"string\") {\r\n        return selected;\r\n      }\r\n\r\n      return selected.label;\r\n    });\r\n\r\n    if (id === \"-1\") {\r\n      addProject({ ...values, keywords, professorId }).then(() =>\r\n        history.push(\"/projects\")\r\n      );\r\n    } else {\r\n      updateProject({ ...values, keywords, professorId, id }).then(() =>\r\n        history.push(\"/projects\")\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    retrieveProjectById(id).then((response) => {\r\n      setProject(response.data);\r\n      if (response.data.keywords) {\r\n        setKeywordsSelected(response.data.keywords);\r\n      }\r\n    });\r\n  }, []);\r\n  console.log(project);\r\n\r\n  function validate() {}\r\n\r\n  return (\r\n    <>\r\n      <div>Project Information for ID - {id}</div>\r\n      <Formik\r\n        initialValues={{\r\n          title: project.title,\r\n          description: project.description,\r\n          degreeType: project.degreeType,\r\n          recommendedSpecialization: project.recommendedSpecialization,\r\n          year: project.year,\r\n          minGrade: project.minGrade,\r\n          maxGrade: project.maxGrade,\r\n          // keywords: project.keywords || [],\r\n          properties: project.properties || [],\r\n        }}\r\n        onSubmit={async (values) => onSubmit(values)}\r\n        validate={validate}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n      >\r\n        {(form) => (\r\n          <Form>\r\n            {console.log(form.values)}\r\n            <fieldset className=\"mb-3\">\r\n              <Field\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset className=\"mb-3\">\r\n              <Field className=\"form-control\" name=\"description\">\r\n                {({\r\n                  field, // { name, value, onChange, onBlur }\r\n                  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n                  meta,\r\n                }) => (\r\n                  <div>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      rows=\"10\"\r\n                      placeholder=\"Description\"\r\n                      {...field}\r\n                    />\r\n                    {meta.touched && meta.error && (\r\n                      <div className=\"error\">{meta.error}</div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </fieldset>\r\n\r\n            <label className=\"form-label\">Type of Degree</label>\r\n            <br />\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degreeType\"\r\n                value=\"Bachelor\"\r\n              />\r\n              <label className=\"form-check-label\">Bachelor</label>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degreeType\"\r\n                value=\"Master\"\r\n              />\r\n              <label className=\"form-check-label\">Master</label>\r\n            </div>\r\n\r\n            <div>Recommended for the following specialization students</div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"MON\"\r\n              />\r\n              <span>MON</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"ELA\"\r\n              />\r\n              <span>ELA</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"CTI\"\r\n              />\r\n              <span>CTI</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"RST\"\r\n              />\r\n              <span>RST</span>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <Field\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"recommendedSpecialization\"\r\n                value=\"TST\"\r\n              />\r\n              <span>TST</span>\r\n            </div>\r\n\r\n            <div>Minimum Average Grade Required</div>\r\n\r\n            <Field name=\"minGrade\" type=\"number\" min=\"0.0\" max=\"10.0\" />\r\n\r\n            <div>Maximum Average Grade Required</div>\r\n            <Field name=\"maxGrade\" type=\"number\" min=\"0.0\" max=\"10.0\" />\r\n\r\n            <FieldArray name=\"properties\">\r\n              {({ insert, remove, push }) => (\r\n                <div>\r\n                  {form.values.properties.length > 0\r\n                    ? form.values.properties.map((property, index) => (\r\n                        <div className=\"row\" key={index}>\r\n                          <div className=\"col\">\r\n                            <label htmlFor={`properties.${index}.skillName`}>\r\n                              SkillName\r\n                            </label>\r\n                            <Field\r\n                              value={property.skillName}\r\n                              name={`properties.${index}.skillName`}\r\n                              type=\"text\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col\">\r\n                            <label htmlFor={`properties.${index}.skillScore`}>\r\n                              SkillScore\r\n                            </label>\r\n                            <Field\r\n                              value={property.skillScore}\r\n                              name={`properties.${index}.skillScore`}\r\n                              type=\"number\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col\">\r\n                            <a\r\n                              className=\"btn-floating btn-small waves-effect waves-light red\"\r\n                              onClick={() => remove(index)}\r\n                            >\r\n                              <i className=\"materials-icons\">X</i>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    : []}\r\n\r\n                  <a\r\n                    className=\"waves-effect waves-light btn btn-primary btn-medium\"\r\n                    onClick={() => push({ skillName: \"\", skillScore: \"\" })}\r\n                  >\r\n                    Add Skill\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </FieldArray>\r\n\r\n            <br />\r\n\r\n            <button className=\"btn btn-success float-right\" type=\"submit\">\r\n              Save\r\n            </button>\r\n            <br />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Fragment>\r\n        <label>Keywords</label>\r\n        <Typeahead\r\n          id=\"typeahead-multi\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setKeywordsSelected}\r\n          options={options}\r\n          placeholder=\"Choose or type...\"\r\n          selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\StudentRequests.js",["140"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { requestsForSpecificStudent } from '../../services/ProjectService';\r\nimport {  useHistory } from 'react-router';\r\n\r\nconst StudentRequests = ({activeUser}) => {\r\n\r\n    const [requests, setRequests] = useState([]);\r\n    const history = useHistory();\r\n\r\n    function showRequests(){\r\n        requestsForSpecificStudent(activeUser.id).then((response)=> setRequests(response.data))\r\n        \r\n    }\r\n\r\n    useEffect(()=> {\r\n        showRequests()\r\n    }, [])\r\n\r\nif(!requests)\r\nreturn <div>Loading...</div>\r\n\r\n\r\nconsole.log(requests)\r\n\r\n    return(\r\n        <div>\r\n            <h1>Here you can see all projects you applied for!</h1>\r\n\r\n            <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Type of Degree</th>\r\n                        <th>Details</th>\r\n                        \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {requests.map(request => \r\n                        <tr key={request.id}>\r\n                            <td>{request.project.title}</td>\r\n                            <td>{request.project.description}</td>\r\n                            <td>{request.status}</td>\r\n                            <td><button onClick={()=>history.push(`/requestDetailsStud/${request.id}`)} className=\"btn btn-success\">Details</button></td>\r\n                        </tr>)}\r\n                </tbody>\r\n            </table>\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentRequests","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\RequestDetails.js",["141","142","143"],"import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport { getRequestById } from '../../services/ProjectService';\r\nimport {  useHistory } from 'react-router';\r\n\r\n\r\nconst RequestDetails = () => {\r\n\r\n    const{id} = useParams();\r\n    const history = useHistory();\r\n    const [requestInfo, setRequestInfo] = useState()\r\n\r\n    useEffect(()=> {\r\n        getRequestById(id).then((response) => setRequestInfo(response.data))\r\n    } ,[])\r\n\r\n\r\n    function sendResponseToStudent(){\r\n        \r\n    }\r\n\r\n\r\nif (!requestInfo)\r\nreturn <span>Loading...</span>\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <div>Request Information</div>\r\n            <div>Project Title:{requestInfo.project.title} </div>\r\n            <div>Description:{requestInfo.project.description} </div>\r\n            <div>Student:{requestInfo.student.firstName} {requestInfo.student.lastName} </div>\r\n            <div>Type of Degree:{requestInfo.project.degreeType} </div>\r\n            <div> \r\n                <button className=\"btn btn-success\">Accept Student</button>\r\n                <button className=\"btn btn-danger\">Decline Student</button>\r\n            </div>\r\n            \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default RequestDetails","C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectDetails.js",["144","145","146","147","148","149","150","151","152"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\professor\\ProjectRequests.js",["153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  requestsForSpecificProject,\r\n  updateRequestStatus,\r\n} from \"../../services/ProjectService\";\r\n\r\nconst ProjectRequests = ({ projectId }) => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [selectedRequest, setSelectedRequest] = useState({ student: [] });\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    requestsForSpecificProject(projectId).then((response) => {\r\n      setRequests(response.data);\r\n      console.log(requests);\r\n    });\r\n  }, [show]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <table className=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Status</th>\r\n              <th>See Profile</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {requests.map((request) => (\r\n              <tr key={request.id}>\r\n                <td>\r\n                  {request.student.firstName} {request.student.lastName}\r\n                </td>\r\n                <td>{request.status}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                      handleShow();\r\n                      console.log(request);\r\n                      setSelectedRequest(request);\r\n                    }}\r\n                  >\r\n                    See Profile\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Student Profile :{\" \"}\r\n            {selectedRequest ? selectedRequest.student.firstName : \" err\"}{\" \"}\r\n            {selectedRequest.student.lastName}{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>Series: {selectedRequest.student.series}</div>\r\n          <div>Average Grade: {selectedRequest.student.avgGrade}</div>\r\n          <div>Email: {selectedRequest.student.email}</div>\r\n          <div>Scoring: {selectedRequest.scoring}</div>\r\n          <div>\r\n            Application Date:{\" \"}\r\n            {moment(selectedRequest.applicationDate).format(\"YYYY-MM-DD\")}{\" \"}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"warning\"\r\n            onClick={() => {\r\n              updateRequestStatus(\r\n                selectedRequest.id,\r\n                \"Declined By Professor\"\r\n              ).then((r) => handleClose());\r\n            }}\r\n          >\r\n            Decline\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => {\r\n              updateRequestStatus(\r\n                selectedRequest.id,\r\n                \"Accepted By Professor\"\r\n              ).then((r) => handleClose());\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectRequests;\r\n","C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\RequestDetailsStud.js",["155","156"],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\AssignedProject.js",["157","158","159"],"import React, { useEffect, useState } from \"react\";\r\nimport { retrieveAssignedProject } from \"../../services/ProjectService\";\r\n\r\nconst AssignedProject = ({ activeUser }) => {\r\n  const [coreProject, setCoreProject] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveAssignedProject(activeUser.id).then((response) =>\r\n      setCoreProject(response.data)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card text-dark bg-light\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">\r\n            {coreProject.title} <br />\r\n          </h4>\r\n          <h5 className=\"card-title\"> I) General Information</h5>\r\n          {/* <h5 className=\"blockquote-footer\">\r\n            Profesor Coordonator: {projectOwner}\r\n          </h5> */}\r\n          {/* <p>Status: {request.status}</p> */}\r\n          <p className=\"card-text\">{coreProject.description}</p>\r\n          <h7>Minimum Average Grade Required: {coreProject.minGrade}</h7>\r\n          {\r\n            <ul className=\"\">\r\n              Keywords\r\n              {coreProject.keywords != undefined\r\n                ? coreProject.keywords.map((keyword) => (\r\n                    <li className=\"\">{keyword}</li>\r\n                  ))\r\n                : \"\"}\r\n            </ul>\r\n          }\r\n          <ul className=\"\">\r\n            Skills\r\n            {coreProject.properties != undefined\r\n              ? coreProject.properties.map((skill) => (\r\n                  <li className=\"\">\r\n                    <span>\r\n                      {skill.skillName} : {skill.skillScore}\r\n                    </span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </ul>\r\n          <h5 className=\"card-title\"> II) Stages and Deadlines</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignedProject;\r\n","C:\\Users\\pc\\licenta\\src\\components\\shared\\DatePicker.js",[],"C:\\Users\\pc\\licenta\\src\\components\\pages\\student\\Assesment.js",["160","161","162","163","164","165"],"import { Field, FieldArray, Formik, Form } from \"formik\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {\r\n  retrieveAllKeywords,\r\n  retrieveProperties,\r\n  setAssesmentReview,\r\n} from \"../../services/AssesmentService\";\r\n\r\nconst Assesment = ({ activeUser }) => {\r\n  const [keywordsList, setKeywordsList] = useState([]);\r\n  const [skillsList, setSkillsList] = useState([]);\r\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    retrieveAllKeywords().then((response) => setKeywordsList(response.data));\r\n    retrieveProperties().then((response) => {\r\n      let skills = [];\r\n      response.data.map((skill) => skills.push(skill.skillName));\r\n      setSkillsList(skills);\r\n    });\r\n  }, []);\r\n\r\n  function ratingChanged(newRating, skill) {\r\n    setSkills(\r\n      skills.map((element) => {\r\n        if (element.skillName == skill) {\r\n          return { ...element, skillScore: newRating };\r\n        } else return element;\r\n      })\r\n    );\r\n\r\n    console.log(skills);\r\n    //console.log(skills);\r\n    // skills.push({ skillName: skill, skillScore: newRating });\r\n    // console.log(skills);\r\n  }\r\n\r\n  function onSubmit() {\r\n    let keywords = [...selectedKeywords];\r\n    let skillsObject = { keywords, skills };\r\n    console.log(skillsObject);\r\n    setAssesmentReview(activeUser.id, skillsObject);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <label>Keywords</label>\r\n        <Typeahead\r\n          id=\"typeahead\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setSelectedKeywords}\r\n          options={keywordsList}\r\n          placeholder=\"Choose or type...\"\r\n          //selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n\r\n      <Fragment>\r\n        <label>Skills</label>\r\n        <Typeahead\r\n          id=\"typeahead\"\r\n          labelkey=\"keyword\"\r\n          multiple\r\n          onChange={setSelectedSkills}\r\n          options={skillsList}\r\n          placeholder=\"Choose or type...\"\r\n          //selected={keywordsSelected}\r\n          allowNew\r\n          newSelectionPrefix=\"Add new item: \"\r\n        />\r\n      </Fragment>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setButtonClicked(!buttonClicked);\r\n          console.log(selectedSkills);\r\n          setSkills(\r\n            selectedSkills.map((skill) => ({\r\n              skillName: skill,\r\n              skillScore: null,\r\n            }))\r\n          );\r\n        }}\r\n      >\r\n        Rate your skills!\r\n      </button>\r\n\r\n      {buttonClicked == true && (\r\n        <div>\r\n          <label>Now let's rate your skills</label>\r\n          <div>\r\n            {selectedSkills.map((skill, key) => (\r\n              <div className=\"row\" key={key}>\r\n                <div className=\"col\">{skill}</div>\r\n                <div className=\"col\">\r\n                  <ReactStars\r\n                    count={5}\r\n                    onChange={(newRating) => ratingChanged(newRating, skill)}\r\n                    size={24}\r\n                    activeColor=\"#ffd700\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <button className=\"btn btn-success\" onClick={onSubmit}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","C:\\Users\\pc\\licenta\\src\\components\\services\\AssesmentService.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":40,"column":6,"nodeType":"176","endLine":40,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":119,"column":15,"nodeType":"180","endLine":119,"endColumn":46},{"ruleId":"170","severity":1,"message":"181","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"182","line":3,"column":9,"nodeType":"172","messageId":"173","endLine":3,"endColumn":15},{"ruleId":"170","severity":1,"message":"183","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":13},{"ruleId":"170","severity":1,"message":"182","line":4,"column":26,"nodeType":"172","messageId":"173","endLine":4,"endColumn":32},{"ruleId":"170","severity":1,"message":"184","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"185","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":19},{"ruleId":"178","severity":1,"message":"186","line":19,"column":13,"nodeType":"180","endLine":19,"endColumn":41},{"ruleId":"174","severity":1,"message":"187","line":30,"column":6,"nodeType":"176","endLine":30,"endColumn":8,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":57,"column":59,"nodeType":"191","messageId":"192","endLine":57,"endColumn":61},{"ruleId":"170","severity":1,"message":"193","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"194","line":3,"column":31,"nodeType":"172","messageId":"173","endLine":3,"endColumn":43},{"ruleId":"170","severity":1,"message":"195","line":15,"column":5,"nodeType":"172","messageId":"173","endLine":15,"endColumn":13},{"ruleId":"170","severity":1,"message":"196","line":21,"column":9,"nodeType":"172","messageId":"173","endLine":21,"endColumn":16},{"ruleId":"170","severity":1,"message":"197","line":4,"column":3,"nodeType":"172","messageId":"173","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"198","line":28,"column":6,"nodeType":"176","endLine":28,"endColumn":14,"suggestions":"199"},{"ruleId":"189","severity":1,"message":"190","line":44,"column":63,"nodeType":"191","messageId":"192","endLine":44,"endColumn":65},{"ruleId":"170","severity":1,"message":"194","line":1,"column":31,"nodeType":"172","messageId":"173","endLine":1,"endColumn":43},{"ruleId":"170","severity":1,"message":"200","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":31},{"ruleId":"174","severity":1,"message":"201","line":51,"column":6,"nodeType":"176","endLine":51,"endColumn":8,"suggestions":"202"},{"ruleId":"178","severity":1,"message":"186","line":222,"column":29,"nodeType":"180","endLine":225,"endColumn":30},{"ruleId":"178","severity":1,"message":"186","line":233,"column":19,"nodeType":"180","endLine":236,"endColumn":20},{"ruleId":"174","severity":1,"message":"203","line":18,"column":8,"nodeType":"176","endLine":18,"endColumn":10,"suggestions":"204"},{"ruleId":"170","severity":1,"message":"196","line":10,"column":11,"nodeType":"172","messageId":"173","endLine":10,"endColumn":18},{"ruleId":"174","severity":1,"message":"201","line":15,"column":8,"nodeType":"176","endLine":15,"endColumn":10,"suggestions":"205"},{"ruleId":"170","severity":1,"message":"206","line":18,"column":14,"nodeType":"172","messageId":"173","endLine":18,"endColumn":35},{"ruleId":"170","severity":1,"message":"207","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":29},{"ruleId":"170","severity":1,"message":"194","line":8,"column":31,"nodeType":"172","messageId":"173","endLine":8,"endColumn":43},{"ruleId":"170","severity":1,"message":"208","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":18},{"ruleId":"170","severity":1,"message":"209","line":17,"column":20,"nodeType":"172","messageId":"173","endLine":17,"endColumn":31},{"ruleId":"174","severity":1,"message":"210","line":28,"column":6,"nodeType":"176","endLine":28,"endColumn":14,"suggestions":"211"},{"ruleId":"189","severity":1,"message":"212","line":59,"column":39,"nodeType":"191","messageId":"192","endLine":59,"endColumn":41},{"ruleId":"189","severity":1,"message":"212","line":70,"column":41,"nodeType":"191","messageId":"192","endLine":70,"endColumn":43},{"ruleId":"178","severity":1,"message":"186","line":152,"column":31,"nodeType":"180","endLine":155,"endColumn":32},{"ruleId":"178","severity":1,"message":"186","line":162,"column":21,"nodeType":"180","endLine":165,"endColumn":22},{"ruleId":"170","severity":1,"message":"196","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":16},{"ruleId":"174","severity":1,"message":"213","line":25,"column":6,"nodeType":"176","endLine":25,"endColumn":12,"suggestions":"214"},{"ruleId":"170","severity":1,"message":"215","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"174","severity":1,"message":"201","line":32,"column":6,"nodeType":"176","endLine":32,"endColumn":14,"suggestions":"216"},{"ruleId":"174","severity":1,"message":"217","line":11,"column":6,"nodeType":"176","endLine":11,"endColumn":8,"suggestions":"218"},{"ruleId":"189","severity":1,"message":"212","line":30,"column":37,"nodeType":"191","messageId":"192","endLine":30,"endColumn":39},{"ruleId":"189","severity":1,"message":"212","line":39,"column":37,"nodeType":"191","messageId":"192","endLine":39,"endColumn":39},{"ruleId":"170","severity":1,"message":"219","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":15},{"ruleId":"170","severity":1,"message":"220","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"221","line":1,"column":29,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"222","line":1,"column":37,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"189","severity":1,"message":"190","line":31,"column":31,"nodeType":"191","messageId":"192","endLine":31,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":97,"column":22,"nodeType":"191","messageId":"192","endLine":97,"endColumn":24},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'isUserLoggedIn' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["225"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","'logout' is defined but never used.","'axios' is defined but never used.","'userEvent' is defined but never used.","'isProfessor' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'activeUser.id', 'calculateScoring', and 'id'. Either include them or remove the dependency array.",["226"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'ErrorMessage' is defined but never used.","'password' is assigned a value but never used.","'history' is assigned a value but never used.","'addProject' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveProjects'. Either include it or remove the dependency array.",["227"],"'projectsForSpecificProfessor' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'showRequests'. Either include it or remove the dependency array.",["229"],["230"],"'sendResponseToStudent' is defined but never used.","'requestsForSpecificProject' is defined but never used.","'requests' is assigned a value but never used.","'setRequests' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'projectInfo'. Either include them or remove the dependency array.",["231"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'projectId' and 'requests'. Either include them or remove the dependency array.",["232"],"'updateRequestStatus' is defined but never used.",["233"],"React Hook useEffect has a missing dependency: 'activeUser.id'. Either include it or remove the dependency array.",["234"],"'Field' is defined but never used.","'FieldArray' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"241","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [activeUser]",{"range":"254","text":"255"},"Update the dependencies array to be: [activeUser.id, calculateScoring, id]",{"range":"256","text":"257"},"Update the dependencies array to be: [reload, retrieveProjects]",{"range":"258","text":"259"},"Update the dependencies array to be: [id]",{"range":"260","text":"261"},"Update the dependencies array to be: [showRequests]",{"range":"262","text":"263"},{"range":"264","text":"261"},"Update the dependencies array to be: [id, projectInfo, reload]",{"range":"265","text":"266"},"Update the dependencies array to be: [projectId, requests, show]",{"range":"267","text":"268"},"Update the dependencies array to be: [id, reload]",{"range":"269","text":"270"},"Update the dependencies array to be: [activeUser.id]",{"range":"271","text":"272"},[1698,1700],"[activeUser]",[972,974],"[activeUser.id, calculateScoring, id]",[849,857],"[reload, retrieveProjects]",[1468,1470],"[id]",[512,514],"[showRequests]",[471,473],[898,906],"[id, projectInfo, reload]",[829,835],"[projectId, requests, show]",[1109,1117],"[id, reload]",[367,369],"[activeUser.id]"]